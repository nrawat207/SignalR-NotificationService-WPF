<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">
    <Style TargetType="Border" x:Key="Frame">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="White" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="ReadOnlyField" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="IsReadOnly" Value="true" />
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinWidth" Value="30" />
    </Style>
    <Style x:Key="InfoField" TargetType="TextBlock"  >
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="10,2"/>
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style x:Key="DefaultLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource MetroLabel}">
        <Setter Property="FontSize" Value="14" />

    </Style>

    <Style x:Key="UsernameTextBox" TargetType="TextBox" BasedOn="{StaticResource ButtonCommandMetroTextBox}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="140" />
    </Style>


    <Style x:Key="ReadOnlyFieldAlignRight" BasedOn="{StaticResource ReadOnlyField}" TargetType="TextBox">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="ReadOnlyFieldAlignLeft" BasedOn="{StaticResource ReadOnlyField}" TargetType="TextBox">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="MachineFileStyle" TargetType="Control">
        <Setter Property="FontSize" Value="16" />
    </Style>
    <Style x:Key="MachineHeader" TargetType="Label">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <Style x:Key="ApproveButton" BasedOn="{StaticResource SquareButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="Green"/>
        <Setter Property="FontSize" Value="14" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MachineButton" TargetType="{x:Type Button}"  BasedOn="{StaticResource MetroButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="#2D2D30" Padding="20,10">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Top" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LargeCheckBox" TargetType="CheckBox" BasedOn="{StaticResource MetroCheckBox}" >
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}" x:Key="QueueItemContainer">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="#fff" 
                            MinHeight="60" 
                            Padding="4" 
                            BorderBrush="#eee" 
                            BorderThickness="2" 
                            x:Name="IconBorder" 
                            Margin="1" >
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="IconBorder" Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderBrush" Value="CadetBlue" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="IconBorder" Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderBrush" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="PasswordBox" BasedOn="{StaticResource  MetroButtonPasswordBox}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="140" />
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value ="CadetBlue" />
                <Setter Property="BorderBrush" Value="CadetBlue" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>
